{"version":3,"sources":["reportWebVitals.ts","actions/layout/index.ts","reducers/layout/index.ts","actions/dashboard/index.ts","reducers/dashboard/index.ts","services/CarsService.ts","reducers/vehicles/cars/index.ts","actions/vehicles/cars.ts","actions/vehicles/reports.ts","reducers/vehicles/reports/index.ts","reducers/vehicles/index.ts","reducers/index.ts","store/index.ts","components/Layout/Header/index.tsx","components/Layout/SideMenu/index.tsx","components/Layout/Content/index.tsx","components/Layout/Footer/index.tsx","containers/Layout/index.tsx","selectors/dashboard.ts","components/DateRange/index.tsx","containers/DateRange/index.tsx","selectors/cars.ts","selectors/stats.ts","components/IncomeChart/index.tsx","containers/IncomeChart/index.tsx","components/common/DefinitionList/index.tsx","components/Summary/index.tsx","containers/Summary/index.tsx","constants/car.ts","components/CarList/index.tsx","containers/CarList/index.tsx","components/pages/Dashboard.tsx","containers/pages/Dashboard.tsx","components/pages/Cars.tsx","containers/pages/Cars.tsx","components/common/ColorCircle/index.tsx","components/CarMaps/index.tsx","components/ReportTable/index.tsx","containers/ReportTable/index.tsx","components/pages/Car.tsx","containers/pages/Car.tsx","components/pages/Maps.tsx","containers/pages/Maps.tsx","components/Review/index.tsx","components/pages/Reviews.tsx","services/ReviewsService.ts","containers/pages/Reviews.tsx","components/pages/NotFound.tsx","components/pages/Error.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_THEME_MODE","TOGGLE_DRAWER","toggleDrawer","isOpen","type","payload","initialState","themeMode","isDrawerOpen","layoutReducer","state","action","SET_FROM_DATE","SET_TO_DATE","from","moment","add","to","dashboardReducer","CarsService","id","Promise","resolve","setTimeout","car","cars","find","String","carsData","WeakMap","days","Math","abs","diff","forEach","data","Array","length","day","index","carId","date","income","floor","cos","countOfLeases","incidents","set","stateNumber","model","status","color","imageUrl","coordinats","CarStatus","GET_CARS_START","GET_CARS_SUCCESS","GET_CARS_FAIL","getCars","dispatch","a","message","isFetching","carsReducer","GET_CAR_REPORTS_START","GET_CAR_REPORTS_SUCCESS","GET_CAR_REPORTS_FAIL","getCarReports","requestId","uuid4","reports","reportsReducer","combineReducers","createRootReducer","history","router","connectRouter","layout","dashboard","vehicles","createBrowserHistory","basename","process","rootReducer","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","thunk","useStyles","makeStyles","theme","createStyles","root","menuButton","marginRight","spacing","title","flexGrow","iconChangeTheme","Header","React","memo","openDrawer","changeTheme","classes","AppBar","position","className","Toolbar","IconButton","edge","aria-label","onClick","Menu","Typography","variant","Brightness4","Brightness7","drawer","width","drawerPaper","menuList","paddingTop","outline","menuItem","padding","link","display","alignItems","textDecoration","palette","text","primary","borderLeft","transition","transitions","create","activeLink","backgroundColor","menuItems","icon","Dashboard","anchor","ViewList","Map","Report","SideMenu","closeDrawer","Drawer","onClose","open","paper","MenuList","map","item","MenuItem","Link","component","NavLink","activeClassName","exact","ListItemIcon","Content","children","SideBar","sidebar","contentSize","Container","maxWidth","Grid","container","xs","sm","marginTop","paddingBottom","policy","fontSize","Footer","year","Date","getFullYear","Divider","align","flexDirection","minHeight","Layout","useDispatch","useSelector","useCallback","setThemeMode","createMuiTheme","ThemeProvider","CssBaseline","Helmet","htmlAttributes","lang","dateRangeSelector","input","marginLeft","DateRange","TextField","label","name","defaultValue","onChange","DateRangeContainer","dateRange","shallowEqual","changeDate","event","target","value","setToDate","format","carsSelector","reportsSelector","carWithReportsSelector","createSelector","carList","carReports","get","carData","Object","assign","report","reduce","summary","push","dailyReportsSelector","dailyReports","currentDate","values","summarySelector","overflow","justifyContent","marginBottom","titleDate","IncomeChart","useTheme","Skeleton","height","margin","top","right","left","bottom","dataKey","angle","fill","secondary","strokeDasharray","labelStyle","stroke","strokeWidth","IncomeChartContainer","incomeReports","ceil","borderBottom","DefinitionList","nameVariant","valueVariant","definitionList","flex","bottomLink","Summary","LinkRoute","SummaryContainer","STATUS_AS_STRING","Free","Busy","Repair","compareReports","b","sortKey","sortFields","CarList","useState","setSortKey","sortKind","setSortKind","sortedCars","useMemo","array","comparator","slice","sort","stableSort","changeSort","field","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableSortLabel","direction","active","TableBody","scope","CarListContainer","header","flexWrap","h1","flexBasis","incomeTitle","DashboardPage","md","lg","clsx","DashboardPageContainer","useEffect","CarsPage","CarsPageContainer","Cars","borderRadius","ColorCircle","style","CarMaps","useRef","initMap","ymaps","current","setBounds","geoObjects","getBounds","checkZoomRange","zoomMargin","defaultState","zoom","center","instanceRef","ref","onLoad","ready","geometry","properties","iconCaption","balloonContentHeader","balloonContent","modules","options","iconColor","ReportTable","page","setPage","rowsPerPage","setRowsPerPage","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","ReportTableContainer","carImage","CarPage","src","alt","CarPageContainer","useParams","getCarById","Error","Car","MapsPage","MapsPageContainer","Maps","author","divider","Review","rating","Rating","precision","readOnly","size","dangerouslySetInnerHTML","__html","skeletonRating","ReviewsPage","reviews","review","ReviewsService","ReviewsPageContainer","setReviews","setIsFetching","getReviews","fetchData","Reviews","NotFoundPage","alignContent","ErrorPage","error","App","useErrorBoundary","ErrorBoundary","didCatch","path","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.8ea03c88.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import type { ThemeMode } from 'reducers/layout';\n\ninterface SetThemeModeAction {\n  type: typeof SET_THEME_MODE,\n  payload: ThemeMode,\n}\n\ninterface ToggleDrawerAction {\n  type: typeof TOGGLE_DRAWER,\n  payload: boolean,\n}\n\nexport type LayoutActionTypes = SetThemeModeAction | ToggleDrawerAction;\n\nexport const SET_THEME_MODE = 'SET_THEME_MODE';\nexport const TOGGLE_DRAWER = 'TOGGLE_DRAWER';\n\nexport const setThemeMode = (themeMode: 'dark' | 'light'): SetThemeModeAction => ({\n  type: SET_THEME_MODE,\n  payload: themeMode,\n});\n\nexport const toggleDrawer = (isOpen: boolean): ToggleDrawerAction => ({\n  type: TOGGLE_DRAWER,\n  payload: isOpen,\n});\n","import {\n  SET_THEME_MODE,\n  TOGGLE_DRAWER,\n  LayoutActionTypes,\n} from 'actions/layout';\n\nexport type ThemeMode = 'dark' | 'light';\n\nexport interface LayoutState {\n  themeMode: ThemeMode;\n  isDrawerOpen: boolean;\n}\n\nconst initialState: LayoutState = {\n  themeMode: 'light',\n  isDrawerOpen: false,\n};\n\nconst layoutReducer = (\n  state = initialState,\n  action: LayoutActionTypes\n): LayoutState => {\n  switch (action.type) {\n    case SET_THEME_MODE:\n      return { ...state, themeMode: action.payload };\n    case TOGGLE_DRAWER:\n      return { ...state, isDrawerOpen: action.payload };\n    default:\n      return { ...state };\n  }\n};\n\nexport default layoutReducer;\n","import moment, { Moment } from 'moment';\n\ninterface SetFromDateAction {\n  type: typeof SET_FROM_DATE;\n  payload: Moment;\n}\n\ninterface SetToDateAction {\n  type: typeof SET_TO_DATE;\n  payload: Moment;\n}\n\nexport type DashboardActionTypes = SetFromDateAction | SetToDateAction;\n\nexport const SET_FROM_DATE = 'SET_FROM_DATE';\nexport const SET_TO_DATE = 'SET_TO_DATE';\n\nexport const setFromDate = (date: string): SetFromDateAction => ({\n  type: SET_FROM_DATE,\n  payload: moment(date, 'YYYY-MM-DD'),\n});\n\nexport const setToDate = (date: string): SetToDateAction => ({\n  type: SET_TO_DATE,\n  payload: moment(date, 'YYYY-MM-DD'),\n});\n","import moment, { Moment } from 'moment';\nimport { \n  SET_FROM_DATE,\n  SET_TO_DATE,\n  DashboardActionTypes,\n} from 'actions/dashboard';\n\nexport interface DashboardState {\n  from: Moment;\n  to: Moment;\n}\n\nconst initialState: DashboardState = {\n  from: moment().add(-7, 'd'),\n  to: moment(),\n};\n\nconst dashboardReducer = (\n  state = initialState,\n  action: DashboardActionTypes\n): DashboardState => {\n  switch(action.type) {\n    case SET_FROM_DATE:\n      return { ...state, from: action.payload };\n    case SET_TO_DATE:\n      return { ...state, to: action.payload };\n    default: \n      return { ...state };\n  }\n};\n\nexport default dashboardReducer;\n","import moment, { Moment } from 'moment';\nimport type { Car } from 'reducers/vehicles/cars';\nimport type { CarDailyReport, CarReports } from 'reducers/vehicles/reports';\n\n\nclass CarsService {\n  private static cars: Car[] = [\n    {\n      id: 1,\n      stateNumber: 'С 012 РС',\n      model: 'Hyndai Solaris (2014)',\n      status: 0,\n      color: '#d76830',\n      imageUrl: '/images/cars/hyundai-solaris-2014.jpg',\n      coordinats: [56.835832, 60.615666],\n    },\n    {\n      id: 2,\n      stateNumber: 'М 123 ВС',\n      model: 'Kia Rio (2014)',\n      status: 1,\n      color: '#808483',\n      imageUrl: '/images/cars/kia-rio-2014.jpg',\n      coordinats: [56.816553, 60.564730],\n    },\n    {\n      id: 3,\n      stateNumber: 'О 684 РТ',\n      model: 'Ford Mondeo (2018)',\n      status: 2,\n      color: '#655c57',\n      imageUrl: '/images/cars/ford-mondeo-2018.jpg',\n      coordinats: [56.831751, 60.562233],\n    },\n  ];\n\n  public static getCarById(id: string): Promise<Car | undefined> {\n\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const car = CarsService.cars.find((car) => String(car.id) === id);\n        resolve(car);\n      }, 2500);\n    });\n  }\n  public static getCars(): Promise<Car[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => resolve(CarsService.cars), 2500);\n    });\n  }\n\n  public static getCarReports(cars: Car[], from: Moment, to: Moment): Promise<CarReports> {\n    const carsData: CarReports = new WeakMap();\n    const days = Math.abs(to.diff(from, 'd'));\n    \n    cars.forEach((car) => {\n      const data: CarDailyReport[] = Array.from(\n        { length: days }, \n        (day, index) => ({\n          carId: car.id,\n          date: moment(from).add(index, 'd'),\n          income: Math.floor(Math.abs(Math.cos(index + car.id) * 50000)),\n          countOfLeases: 10 + index + car.id,\n          incidents: Math.floor(index * 0.5) % car.id,\n        })\n      );\n      carsData.set(car, data);\n    });\n\n    return new Promise((resolve) => {\n      setTimeout(() => resolve(carsData), 2500);\n    });\n  }\n}\n\nexport default CarsService;\n","import {\n  GET_CARS_START,\n  GET_CARS_SUCCESS,\n  GET_CARS_FAIL,\n  CarsActionTypes,\n} from 'actions/vehicles/cars';\n\nexport enum CarStatus {\n  Free,\n  Busy,\n  Repair,\n}\n\nexport interface Car {\n  id: number;\n  stateNumber: string;\n  model: string;\n  status: CarStatus;\n  color: string;\n  imageUrl: string;\n  coordinats: number[];\n}\n\nexport interface CarsState {\n  cars: Car[];\n  isFetching: boolean;\n}\n\nconst initialState: CarsState  = {\n  cars: [],\n  isFetching: false,\n};\n\nconst carsReducer = (\n  state = initialState,\n  action: CarsActionTypes\n): CarsState => {\n  switch (action.type) {\n    case GET_CARS_START:\n      return { ...state, isFetching: true };\n    case GET_CARS_SUCCESS: \n      return {\n        ...state,\n        isFetching: false,\n        cars: action.payload,\n      };\n    case GET_CARS_FAIL:\n      return {\n        ...state,\n        isFetching: false,\n        cars: [],\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default carsReducer;\n","import CarsService from 'services/CarsService';\nimport { push, CallHistoryMethodAction } from 'connected-react-router';\n\nimport type { RootState } from 'store';\nimport type { ThunkAction } from 'redux-thunk';\nimport type { Car } from 'reducers/vehicles/cars';\n\ninterface GetCarsStartAction {\n  type: typeof GET_CARS_START;\n}\n\ninterface GetCarsSuccessAction {\n  type: typeof GET_CARS_SUCCESS;\n  payload: Car[];\n}\n\ninterface GetCarsFailAction {\n  type: typeof GET_CARS_FAIL;\n  payload: string;\n}\n\nexport type CarsActionTypes = GetCarsStartAction \n  | GetCarsSuccessAction \n  | GetCarsFailAction\n  | CallHistoryMethodAction;\n\nexport const GET_CARS_START = 'GET_CARS_START';\nexport const GET_CARS_SUCCESS = 'GET_CARS_SUCCESS';\nexport const GET_CARS_FAIL = 'GET_CARS_FAIL';\n\nexport const getCarById = (id: string): ThunkAction<void, RootState, unknown, CarsActionTypes> => (\n  async (dispatch) => {\n    dispatch({\n      type: GET_CARS_START,\n    });\n\n    try {\n      const car = await CarsService.getCarById(id);\n\n      if (!car) throw new Error(`Car with id ${id} doesn't exist.`);\n\n      dispatch({\n        type: GET_CARS_SUCCESS,\n        payload: [car],\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_CARS_FAIL,\n        payload: err.message,\n      });\n\n      dispatch(push('/404'));\n    }\n  }\n);\n\nexport const getCars = (): ThunkAction<void, RootState, unknown, CarsActionTypes> => (\n  async (dispatch) => {\n    dispatch({\n      type: GET_CARS_START,\n    });\n\n    try {\n      const cars = await CarsService.getCars();\n      dispatch({\n        type: GET_CARS_SUCCESS,\n        payload: cars,\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_CARS_FAIL,\n        payload: err.message,\n      });\n    }\n  }\n);\n","import CarsService from 'services/CarsService';\nimport { v4 as uuid4 } from 'uuid';\n\nimport type { Moment } from 'moment';\nimport type { RootState } from 'store';\nimport type { ThunkAction } from 'redux-thunk';\nimport type { Car } from 'reducers/vehicles/cars';\nimport type { CarReports } from 'reducers/vehicles/reports';\n\ninterface ActionWithRequestId {\n  requestId: string | null;\n}\n\ninterface GetCarReportsStartAction extends ActionWithRequestId {\n  type: typeof GET_CAR_REPORTS_START;\n}\n\ninterface GetCarReportsSuccessAction extends ActionWithRequestId {\n  type: typeof GET_CAR_REPORTS_SUCCESS;\n  payload: CarReports;\n}\n\ninterface GetCarReportsFailAction extends ActionWithRequestId {\n  type: typeof GET_CAR_REPORTS_FAIL;\n  payload: string;\n}\n\nexport type CarReportsActionTypes = GetCarReportsStartAction | GetCarReportsSuccessAction | GetCarReportsFailAction;\n\nexport const GET_CAR_REPORTS_START = 'GET_CAR_REPORTS_START';\nexport const GET_CAR_REPORTS_SUCCESS = 'GET_CAR_REPORTS_SUCCESS';\nexport const GET_CAR_REPORTS_FAIL = 'GET_CAR_REPORTS_FAIL';\n\nexport const getCarReports = (\n  cars: Car[],\n  from: Moment,\n  to: Moment\n): ThunkAction<void, RootState, unknown, CarReportsActionTypes> => (\n  async (dispatch) => {\n    const requestId = uuid4();\n    dispatch({\n      type: GET_CAR_REPORTS_START,\n      requestId,\n    });\n    \n    try {\n      const data = await CarsService.getCarReports(cars, from, to);\n      dispatch({\n        type: GET_CAR_REPORTS_SUCCESS,\n        payload: data,\n        requestId,\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_CAR_REPORTS_FAIL,\n        payload: err.message,\n        requestId,\n      });\n    }\n  }\n);\n","import {\n  GET_CAR_REPORTS_START,\n  GET_CAR_REPORTS_SUCCESS,\n  GET_CAR_REPORTS_FAIL,\n  CarReportsActionTypes\n} from 'actions/vehicles/reports';\n\nimport type { Moment } from 'moment';\nimport type { Car } from 'reducers/vehicles/cars';\n\nexport interface CarReport {\n  income: number;\n  incidents: number;\n  countOfLeases: number;\n}\n\nexport interface CarDailyReport extends CarReport {\n  date: Moment;\n  carId: number;\n}\n\nexport type CarReports = WeakMap<Car, ReadonlyArray<CarDailyReport>>;\n\nexport interface ReportsState {\n  reports: CarReports | null;\n  isFetching: boolean;\n  requestId: string | null;\n}\n\nconst initialState: ReportsState = {\n  reports: null,\n  isFetching: false,\n  requestId: null,\n};\n\nconst reportsReducer = (\n  state = initialState,\n  action: CarReportsActionTypes\n): ReportsState => {\n\n  switch (action.type) {\n    case GET_CAR_REPORTS_START:\n      return { \n        ...state,\n        isFetching: true,\n        requestId: action.requestId,\n      };\n    case GET_CAR_REPORTS_SUCCESS:\n      if (state.requestId !== action.requestId) return state;\n      return {\n        ...state,\n        isFetching: false,\n        reports: action.payload,\n        requestId: null,\n      };\n    case GET_CAR_REPORTS_FAIL:\n      if (state.requestId !== action.requestId) return state;\n      return {\n        ...state,\n        isFetching: false,\n        reports: null,\n        requestId: null,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default reportsReducer;\n","import { combineReducers } from 'redux';\nimport carsReducer from './cars';\nimport reportsReducer from './reports';\n\nexport default combineReducers({\n  cars: carsReducer,\n  reports: reportsReducer,\n});\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router'\nimport layout from 'reducers/layout';\nimport dashboard from 'reducers/dashboard';\nimport vehicles from 'reducers/vehicles';\n\nconst createRootReducer = (history: any) => combineReducers({\n  router: connectRouter(history),\n  layout,\n  dashboard,\n  vehicles,\n});\n\nexport default createRootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk';\nimport createRootReducer from 'reducers';\n\nexport const history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\nconst rootReducer = createRootReducer(history);\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(\n      routerMiddleware(history),\n      thunk\n    ),\n  ),\n);\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n} from '@material-ui/core';\nimport {\n  Menu as MenuIcon,\n  Brightness4,\n  Brightness7,\n} from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  iconChangeTheme: {},\n}));\n\ninterface HeaderProps {\n  openDrawer?: () => void;\n  changeTheme?: () => void;\n  themeMode: 'dark' | 'light';\n}\n\nconst Header: React.FC<HeaderProps> = React.memo(\n  ({ openDrawer, changeTheme, themeMode }: HeaderProps) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"relative\" className={classes.root}>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"menu\"\n          onClick={openDrawer}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          CarShare\n        </Typography>\n        <IconButton\n          aria-label=\"change theme\"\n          onClick={changeTheme}\n          color=\"inherit\"\n        >\n          {themeMode === 'light' ? <Brightness4 /> : <Brightness7 />}\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n);\n\nexport default Header;\n","import React from 'react';\nimport {\n  Drawer,\n  MenuList,\n  MenuItem,\n  ListItemIcon,\n  Typography,\n  Link\n} from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { \n  Dashboard,\n  ViewList,\n  Report,\n  Map,\n} from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n  drawer: {\n    width: 240,\n  },\n  drawerPaper: {\n    width: 240,\n  },\n  menuList: {\n    paddingTop: 0,\n    '&:active': {\n      outline: 'none',\n    },\n  },\n  menuItem: {\n    padding: 0,\n  },\n  link: {\n    display: 'flex',\n    flexGrow: 1,\n    alignItems: 'center',\n    textDecoration: 'none',\n    padding: '6px 16px',\n    color: theme.palette.text.primary,\n    borderLeft: '5px solid transparent',\n    transition: theme.transitions.create(['all']),\n    '&:hover': {\n      textDecoration: 'none',\n    }\n  },\n  activeLink: {\n    backgroundColor: theme.palette.type === 'light' ? 'rgba(63, 81, 181, .15)' : 'rgba(51, 51, 51, .15)',\n  }\n})\n});\n\nconst menuItems = [\n  { icon: <Dashboard />, anchor: 'Главная панель', to: '/' },\n  { icon: <ViewList />, anchor: 'Автомобили', to: '/cars' },\n  { icon: <Map />, anchor: 'Карта', to: '/maps' },\n  { icon: <Report />, anchor: 'Отзывы', to: '/reviews' },\n];\n\ninterface SideMenuProps {\n  isDrawerOpen: boolean;\n  closeDrawer: () => void;\n}\n\nconst SideMenu: React.FC<SideMenuProps> = ({ isDrawerOpen, closeDrawer }: SideMenuProps) => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      onClose={closeDrawer}\n      open={isDrawerOpen}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <nav>\n        <MenuList>\n          {menuItems.map((item) => (\n            <MenuItem key={item.to} className={classes.menuItem}>\n              <Link\n                component={NavLink}\n                to={item.to}\n                className={classes.link}\n                activeClassName={classes.activeLink}\n                exact\n              >\n                <ListItemIcon>{item.icon}</ListItemIcon>\n                <Typography variant=\"inherit\">{item.anchor}</Typography>\n              </Link>\n            </MenuItem>\n          ))}\n        </MenuList>\n      </nav>\n    </Drawer>\n  );\n};\n\nexport default SideMenu;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n} from '@material-ui/core';\n\ninterface ContentProps {\n  children: React.ReactNode;\n  sidebar?: React.ReactNode;\n}\n\nconst Content: React.FC<ContentProps> = ({ children, sidebar: SideBar}: ContentProps) => {\n  const contentSize = SideBar? 9 : 12;\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container>\n        { SideBar && <Grid item xs={12} sm={3}>{SideBar}</Grid> }\n        <Grid item xs={12} sm={contentSize}>{children}</Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Content;\n","import {\n  Container,\n  Typography,\n  Divider,\n} from '@material-ui/core';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    marginTop: 'auto',\n  },\n  container: {\n    paddingTop: 20,\n    paddingBottom: 20,\n  },\n  policy: {\n    fontSize: '.9rem',\n  },\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n  const year = new Date().getFullYear();\n\n  return (\n    <footer className={classes.root}>\n      <Divider />\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Typography align=\"right\">CarShare © {year}</Typography>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  CssBaseline,\n  ThemeProvider,\n  createMuiTheme,\n} from '@material-ui/core';\nimport { Helmet } from 'react-helmet';\n\nimport Header from 'components/Layout/Header';\nimport SideMenu from 'components/Layout/SideMenu';\nimport Content from 'components/Layout/Content';\nimport Footer from 'components/Layout/Footer';\n\nimport { toggleDrawer, setThemeMode} from 'actions/layout';\nimport type { RootState } from 'store';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n  },\n}));\n\ninterface LayoutProps {\n  children: React.ReactNode;\n  sidebar?: React.ReactNode;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children, sidebar }: LayoutProps) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const isDrawerOpen = useSelector((state: RootState) => state.layout.isDrawerOpen);\n  const themeMode = useSelector((state: RootState) => state.layout.themeMode);\n\n  const openDrawer = useCallback(() => dispatch(toggleDrawer(true)), [dispatch]);\n  const closeDrawer = useCallback(() => dispatch(toggleDrawer(false)), [dispatch]);\n  const changeTheme = useCallback(() => {\n    dispatch(\n      setThemeMode(themeMode === 'dark'? 'light' : 'dark')\n    );\n  }, [dispatch, themeMode]);\n\n  const theme = createMuiTheme({\n    palette: {\n      type: themeMode,\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Helmet htmlAttributes={{ lang: 'ru' }} />\n      <div className={classes.root}>\n        <Header\n          openDrawer={openDrawer}\n          changeTheme={changeTheme}\n          themeMode={themeMode}\n        />\n        <SideMenu \n          isDrawerOpen={isDrawerOpen}\n          closeDrawer={closeDrawer}\n        />\n        <Content sidebar={sidebar}>{children}</Content>\n        <Footer />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default Layout;\n","import type { RootState } from 'store';\n\nexport const dateRangeSelector = (state: RootState) => state.dashboard;\n","import React from 'react';\nimport { TextField, TextFieldProps } from '@material-ui/core';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {},\n  input: {\n    width: 150,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\ninterface DateRangeProps {\n  from: TextFieldProps;\n  to: TextFieldProps;\n}\nconst DateRange: React.FC<DateRangeProps> = ({ from, to }: DateRangeProps) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        label={from.label || 'From'}\n        type=\"date\"\n        name=\"from\"\n        defaultValue={from.defaultValue}\n        className={classes.input}\n        onChange={from.onChange}\n      />\n      <TextField\n        label={to.label || 'To'}\n        type=\"date\"\n        name=\"to\"\n        defaultValue={to.defaultValue}\n        className={classes.input}\n        onChange={to.onChange}\n      />\n    </div>\n  );\n};\n\nexport default DateRange;\n","import { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { setFromDate, setToDate } from 'actions/dashboard';\nimport { dateRangeSelector } from 'selectors/dashboard';\nimport DateRange from 'components/DateRange';\n\n\nconst DateRangeContainer = () => {\n  const dispatch = useDispatch();\n  const dateRange = useSelector(dateRangeSelector, shallowEqual);\n\n  const changeDate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.name === 'from') {\n      dispatch(setFromDate(event.target.value));\n    } else {\n      dispatch(setToDate(event.target.value));\n    }\n  };\n\n  return <DateRange \n    from={{\n      defaultValue: dateRange.from.format('YYYY-MM-DD'),\n      onChange: changeDate,\n    }}\n    to={{\n      defaultValue: dateRange.to.format('YYYY-MM-DD'),\n      onChange: changeDate,\n    }}\n  />;\n};\n\nexport default DateRangeContainer;\n","import { createSelector } from 'reselect';\nimport type { RootState } from 'store';\nimport type { Car } from 'reducers/vehicles/cars';\nimport type { CarReport, CarReports } from 'reducers/vehicles/reports';\n\nexport interface CarWithReport extends Car {\n  report?: CarReport;\n}\n\nexport const carsSelector = (state: RootState) => state.vehicles.cars.cars;\nexport const reportsSelector = (state: RootState) => state.vehicles.reports.reports;\n\nexport const carWithReportsSelector = createSelector(\n  carsSelector,\n  reportsSelector,\n  (cars: Car[], reports: CarReports | null) => {\n    const carList: CarWithReport[] = [];\n\n    for (let car of cars) {\n      const carReports = reports?.get(car);\n      const carData: CarWithReport = Object.assign({}, car);\n\n      if (carReports) {\n        carData.report = carReports.reduce((summary: CarReport, report) => {\n          summary.income += report.income;\n          summary.countOfLeases += report.countOfLeases;\n          summary.incidents += report.incidents;\n\n          return summary;\n        }, {\n          income: 0,\n          countOfLeases: 0,\n          incidents: 0,\n        });\n      }\n\n      carList.push(carData);\n    }\n\n    return carList;\n  }\n);\n","import { createSelector } from 'reselect';\nimport { carsSelector, reportsSelector } from './cars';\nimport type { Car } from 'reducers/vehicles/cars';\nimport type { CarReport, CarReports } from 'reducers/vehicles/reports';\n\nexport interface DailyReport extends CarReport {\n  date: string;\n}\n\nexport const dailyReportsSelector = createSelector(\n  carsSelector,\n  reportsSelector,\n  (cars: Car[], reports: CarReports | null) => {\n    const dailyReports: Record<string, DailyReport> = {};\n    for (let car of cars) {\n      const carReports = reports?.get(car);\n      if (!carReports) continue;\n      carReports.forEach((report) => {\n        const date = report.date.format('DD.MM.YYYY');\n        let currentDate = dailyReports[date];\n\n        dailyReports[date] = {\n          date,\n          income: currentDate ? currentDate.income + report.income : report.income,\n          countOfLeases: currentDate ? currentDate.countOfLeases + report.countOfLeases : report.countOfLeases,\n          incidents: currentDate ? currentDate.incidents + report.incidents : report.incidents,\n        };\n      });\n    }\n\n    return Object.values(dailyReports);\n  }\n);\n\nexport const summarySelector = createSelector(\n  dailyReportsSelector,\n  (reports: DailyReport[]) => {\n    if (!reports.length) return null;\n\n    return reports.reduce((summary: CarReport, report) => {\n      summary.income += report.income;\n      summary.countOfLeases += report.countOfLeases;\n      summary.incidents += report.incidents;\n\n      return summary;\n    }, {\n      income: 0,\n      countOfLeases: 0,\n      incidents: 0,\n    })\n  }\n);\n","import React from 'react';\nimport {\n  AreaChart,\n  Tooltip,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Area,\n  ResponsiveContainer,\n} from 'recharts';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles, createStyles, Theme, useTheme } from '@material-ui/core/styles';\nimport { Skeleton } from '@material-ui/lab';\n\nimport type { DailyReport } from 'selectors/stats';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    overflow: 'hidden',\n  },\n  title: {\n    display: 'flex',\n    flexGrow: 1,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing(1),\n  },\n  titleDate: {\n    fontSize: '.75rem',\n  }\n}));\n\ninterface IncomeChartProps {\n  reports: DailyReport[];\n}\n\nconst IncomeChart: React.FC<IncomeChartProps> = ({ \n  reports,\n} : IncomeChartProps) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography\n          color=\"primary\"\n          variant=\"h6\"\n          component=\"h2\"\n        >\n          Доход\n        </Typography>\n        <Typography\n          align=\"right\"\n          color=\"textSecondary\"\n          className={classes.titleDate}\n        >\n          {!reports.length && <Skeleton variant=\"text\" width={50} />}\n          {reports.length > 0 && (\n            <span>\n              {reports[0].date} - {reports[reports.length - 1].date}\n            </span>\n          )}\n        </Typography>\n      </div>\n      {!reports.length && <Skeleton variant=\"rect\" width=\"100%\" height={200} />}\n      {reports.length > 0 && (\n        <ResponsiveContainer width=\"100%\" height={200}>\n          <AreaChart \n            data={reports as object[]}\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n          >\n            <XAxis dataKey=\"date\" />\n            <YAxis\n              label={{ \n                value: 'Доход ₽',\n                angle: -90,\n                position: 'insideLeft',\n                fill: theme.palette.text.secondary,\n              }}\n            />\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <Tooltip labelStyle={{color: 'rgba(0, 0, 0, .87)'}}/>\n            <Area type=\"monotone\" dataKey=\"income\" name=\"Доход\" fill=\"none\" stroke=\"#8884d8\" strokeWidth=\"2\" />\n            <Area type=\"monotone\" dataKey=\"countOfLeases\" name=\"Кол-во Аренд\" fill=\"none\" stroke=\"#03f442\" strokeWidth=\"0\" />\n            <Area type=\"monotone\" dataKey=\"incidents\" fill=\"none\" name=\"Происшествий\" stroke=\"#f44336\" strokeWidth=\"0\" />\n          </AreaChart>\n        </ResponsiveContainer>\n      )}\n    </div>\n  );\n};\n\nexport default IncomeChart;\n","import { useSelector } from 'react-redux';\nimport { dailyReportsSelector } from 'selectors/stats';\nimport IncomeChart from 'components/IncomeChart';\n\nconst IncomeChartContainer= () => {\n  const incomeReports = useSelector(dailyReportsSelector);\n  \n  return <IncomeChart reports={incomeReports} />;\n};\n\nexport default IncomeChartContainer;\n","import React, { Fragment } from 'react';\nimport {\n  Typography,\n  Grid,\n} from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\ninterface Definition {\n  name: string;\n  value: React.ReactNode;\n}\n\ninterface DefinitionListProps {\n  data: Definition[];\n  nameVariant?: 'h4' | 'h5' | 'h6' | 'body1' | 'body2';\n  valueVariant?: 'h4' | 'h5' | 'h6' | 'body1' | 'body2';\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  ceil: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  }\n}));\n\nconst DefinitionList: React.FC<DefinitionListProps> = ({\n  data,\n  nameVariant,\n  valueVariant,\n}: DefinitionListProps) => {\n  const classes = useStyles();\n  return (\n    <Grid \n      container\n      spacing={2}\n      component=\"dl\"\n      className={classes.root}\n    >\n      {data.map((item) => (\n        <Fragment key={item.name}>\n          <Grid item xs={6} className={classes.ceil}>\n            <Typography \n              component=\"dt\" \n              variant={nameVariant || 'body1'}\n            >\n              {item.name}:\n            </Typography>\n          </Grid>\n          <Grid item xs={6} className={classes.ceil}>\n            <Typography \n              component=\"dd\"\n              variant={valueVariant || 'body1'}\n            >\n              {item.value}\n            </Typography>\n          </Grid>\n        </Fragment>\n      ))}\n    </Grid>\n  );\n};\n\nexport default DefinitionList;\n","import {\n  Typography,\n  Link,\n} from '@material-ui/core';\nimport { Link as LinkRoute } from 'react-router-dom';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Skeleton } from '@material-ui/lab';\nimport DefinitionList from 'components/common/DefinitionList';\nimport type { CarReport } from 'reducers/vehicles/reports';\n\ninterface SummaryProps {\n  data: CarReport | null;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    'height': '100%',\n  },\n  title: {\n    marginBottom: theme.spacing(1),\n  },\n  definitionList: {\n    flex: 1,\n  },\n  bottomLink: {\n  },\n}));\n\nconst Summary: React.FC<SummaryProps> = ({ data }: SummaryProps) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography\n        color=\"primary\"\n        variant=\"h6\"\n        component=\"h2\"\n        className={classes.title}\n      >\n        Сводка\n      </Typography>\n      <div className={classes.definitionList}>\n        <DefinitionList \n          data={[\n            {\n              name: 'Доход',\n              value: data ? data.income : <Skeleton variant=\"text\" />,\n            },\n            {\n              name: 'Кол-во Аренд',\n              value: data ? data.countOfLeases : <Skeleton variant=\"text\" />,\n            },\n            {\n              name: 'Происшествий',\n              value: data ? data.incidents : <Skeleton variant=\"text\" />,\n            }\n          ]}\n        />\n      </div>\n      <div className={classes.bottomLink}>\n        <Link component={LinkRoute} to=\"/reviews\" color=\"primary\">Отзывы</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Summary;\n","import { useSelector } from 'react-redux';\nimport Summary from 'components/Summary';\nimport { summarySelector } from 'selectors/stats';\n\nconst SummaryContainer = () => {\n  const data = useSelector(summarySelector);\n\n  return <Summary data={data} />\n};\n\nexport default SummaryContainer;\n","import { CarStatus } from 'reducers/vehicles/cars';\n\nexport const STATUS_AS_STRING: Record<CarStatus, string> = {\n  [CarStatus.Free]: 'Свободен',\n  [CarStatus.Busy]: 'Занят',\n  [CarStatus.Repair]: 'В ремонте',\n};\n","import React, { useState, useMemo } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableSortLabel,\n  TableHead,\n  TableRow,\n  Paper,\n  Link,\n} from '@material-ui/core';\nimport { Link as LinkRoute } from 'react-router-dom';\nimport { Skeleton } from '@material-ui/lab';\nimport { STATUS_AS_STRING } from 'constants/car';\nimport type { CarReport } from 'reducers/vehicles/reports';\nimport type { CarWithReport } from 'selectors/cars';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {}\n}));\n\ninterface CarListProps {\n  cars: CarWithReport[];\n}\n\ntype SortKey = keyof CarReport;\n\nexport const compareReports = (\n  a: CarWithReport,\n  b: CarWithReport,\n  sortKey: SortKey\n): number => {\n  if (a.report && b.report) {\n    return a.report[sortKey] - b.report[sortKey];\n  }\n  \n  return a.report? 1 : -1;\n};\n\nexport const stableSort = (\n  array: CarWithReport[],\n  comparator: (a: CarWithReport, b: CarWithReport, sortKey: SortKey) => number,\n  sortKey: SortKey,\n  sortKind: 'asc' | 'desc',\n) => {\n  return array.slice().sort((a, b) => {\n    if (sortKind === 'asc') {\n      return comparator(a, b, sortKey);\n    }\n    return -comparator(a, b, sortKey);\n  });\n}\n\nconst sortFields: { name: SortKey, label: string }[] = [\n  {\n    name: 'countOfLeases',\n    label: 'Кол-во Аренд',\n  },\n  {\n    name: 'income',\n    label: 'Доход',\n  },\n  {\n    name: 'incidents',\n    label: 'Происшествий',\n  },\n];\n\nconst CarList: React.FC<CarListProps> = ({ cars }: CarListProps) => {\n  const classes  = useStyles();\n  const [sortKey, setSortKey] = useState<SortKey | null>(null);\n  const [sortKind, setSortKind] = useState<'asc' | 'desc'>('asc');\n  const sortedCars = useMemo(() => {\n    if (!sortKey) return cars;\n\n    return stableSort(cars, compareReports, sortKey, sortKind)\n  }, [cars, sortKey, sortKind]);\n\n  const changeSort = (field: SortKey) => () => {\n    if (sortKey === field) {\n      setSortKind(sortKind === 'asc'? 'desc' : 'asc');\n    } else {\n      setSortKey(field);\n    }\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.root} aria-label=\"car list table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Гос. Номер</TableCell>\n            <TableCell align=\"center\">Марка, Модель</TableCell>\n            {sortFields.map((field) => (\n              <TableCell align=\"center\" key={field.name} className=\"sortColumn\">\n                <TableSortLabel\n                  onClick={changeSort(field.name)}\n                  direction={sortKind}\n                  active={sortKey === field.name}\n                >\n                  {field.label}\n                </TableSortLabel>\n              </TableCell>\n            ))}\n            <TableCell align=\"center\">Статус</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {sortedCars && sortedCars.map((car) => (\n            <TableRow key={car.id}>\n              <TableCell component=\"th\" scope=\"row\">{car.stateNumber}</TableCell>\n              <TableCell align=\"center\">\n                <Link component={LinkRoute} to={`/cars/${car.id}`} color=\"primary\">{car.model}</Link>\n              </TableCell>\n              <TableCell align=\"center\">\n                {!car.report && <Skeleton />}\n                {car.report && car.report.countOfLeases}\n              </TableCell>\n              <TableCell align=\"center\">\n                {!car.report && <Skeleton />}\n                {car.report && car.report.income}\n              </TableCell>\n              <TableCell align=\"center\">\n                {!car.report && <Skeleton />}\n                {car.report && car.report.incidents}\n              </TableCell>\n              <TableCell align=\"center\">{STATUS_AS_STRING[car.status]}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default CarList;\n","import { useSelector } from 'react-redux';\nimport { carWithReportsSelector } from 'selectors/cars';\nimport CarList from 'components/CarList';\n\nconst CarListContainer = () => {\n  const carList = useSelector(carWithReportsSelector);\n  return <CarList cars={carList} />;\n}\n\nexport default CarListContainer;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Divider,\n  Grid,\n  Paper,\n} from '@material-ui/core';\nimport { Helmet } from 'react-helmet';\nimport DateRange from 'containers/DateRange';\nimport IncomeChart from 'containers/IncomeChart';\nimport Summary from 'containers/Summary';\nimport CarList from 'containers/CarList';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    paddingTop: 40,\n    paddingBottom: 40,\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    paddingBottom: 20,\n    '@media screen and (max-width: 400px)': {\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n    }\n  },\n  h1: {\n    width: '50%',\n    '@media screen and (max-width: 720px)': {\n      width: '100%',\n    },\n  },\n  dateRange: {\n    '@media screen and (max-width: 720px)': {\n      flexBasis: '20%',\n    },\n    '@media screen and (max-width: 400px)': {\n      flexBasis: '100%',\n    }\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  incomeTitle: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  summary: {\n    height: '100%',\n  }\n}));\n\nconst DashboardPage = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <Helmet title=\"Панель управления\" />\n      <Grid container className={classes.root} spacing={3}>\n        <Grid item xs={12} className={classes.header}>\n          <Typography \n            variant=\"h4\"\n            component=\"h1\"\n            className={classes.h1}\n          >\n            Панель управления\n          </Typography>\n          <div className={classes.dateRange}>\n            <DateRange />\n          </div>\n        </Grid>\n        <Grid item xs={12}><Divider /></Grid>\n        <Grid item xs={12} md={8} lg={9}>\n          <Paper className={classes.paper}>\n            <IncomeChart />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4} lg={3}>\n          <Paper className={clsx(classes.paper, classes.summary)}>\n            <Summary />\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <CarList />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default DashboardPage;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { getCars } from 'actions/vehicles/cars';\nimport { getCarReports } from 'actions/vehicles/reports';\nimport DashboardPage from 'components/pages/Dashboard';\nimport { dateRangeSelector } from 'selectors/dashboard';\nimport { carsSelector } from 'selectors/cars';\n\nconst DashboardPageContainer = () => {\n  const dispatch = useDispatch();\n  const dateRange = useSelector(dateRangeSelector, shallowEqual);\n  const cars = useSelector(carsSelector);\n\n  useEffect(() => {\n    dispatch(getCars());\n  }, [dispatch])\n\n  useEffect(() => {\n    if (cars.length > 0) {\n      dispatch(getCarReports(cars, dateRange.from, dateRange.to));\n    }\n  }, [dispatch, cars, dateRange]);\n\n  return <DashboardPage />;\n};\n\nexport default DashboardPageContainer;\n","import {\n  Grid,\n  Typography,\n  Divider,\n} from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Helmet } from 'react-helmet';\nimport CarList from 'containers/CarList';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    paddingTop: 40,\n    paddingBottom: 40,\n  },\n  header: {},\n}));\n\nconst CarsPage = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Helmet title=\"Автомобили\" />\n      <Grid container className={classes.root} spacing={3}>\n        <Grid item xs={12} className={classes.header}>\n          <Typography variant=\"h4\" component=\"h1\">Автомобили</Typography>\n        </Grid>\n        <Grid item xs={12}><Divider /></Grid>\n        <Grid item xs={12}>\n          <CarList />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default CarsPage;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCars } from 'actions/vehicles/cars';\nimport { getCarReports } from 'actions/vehicles/reports';\nimport { carsSelector } from 'selectors/cars';\nimport CarsPage from 'components/pages/Cars';\nimport moment from 'moment';\n\nconst dateRange = {\n  from: moment().add(-1, 'y'),\n  to: moment(),\n};\n\nconst CarsPageContainer = () => {\n  const dispatch = useDispatch();\n  const cars = useSelector(carsSelector);\n\n  useEffect(() => {\n    dispatch(getCars());\n  }, [dispatch])\n\n  useEffect(() => {\n    if (cars.length > 0) {\n      dispatch(getCarReports(cars, dateRange.from, dateRange.to));\n    }\n  }, [dispatch, cars]);\n\n  return <CarsPage />;\n};\n\nexport default CarsPageContainer;\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\ninterface ColorCircleProps {\n  color: string;\n  width?: string | number;\n  height?: string | number;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    display: 'inline-block',\n    borderRadius: 100,\n  }\n}));\n\nconst ColorCircle: React.FC<ColorCircleProps> = ({\n  color,\n  width = 10,\n  height = 10\n}: ColorCircleProps) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root} style={{\n      width,\n      height,\n      backgroundColor: color,\n    }} />\n  );\n}; \n\nexport default ColorCircle;\n","import React, { useRef } from 'react';\nimport { YMaps, Map, MapState, Placemark, YMapsApi } from 'react-yandex-maps';\nimport { Skeleton } from '@material-ui/lab';\nimport { STATUS_AS_STRING } from 'constants/car';\n\nimport type { Car } from 'reducers/vehicles/cars';\n\n\ninterface CarMapsProps {\n  cars: Car[];\n  width?: string | number;\n  height?: string | number;\n}\n\nconst CarMaps: React.FC<CarMapsProps> = React.memo(({\n  cars,\n  width = '100%',\n  height = 250 \n}: CarMapsProps) => {\n  const map = useRef<any>(null);\n  const initMap = React.useCallback((ymaps: YMapsApi) => {\n    if (cars.length > 1) {\n      map.current.setBounds(\n        map.current.geoObjects.getBounds(),\n        {\n          checkZoomRange: true,\n          zoomMargin: 15,\n        }\n      );\n    }\n  }, [cars]);\n  const defaultState: MapState | null = React.useMemo(() => {\n    if (!cars || !cars.length) {\n      return null;\n    }\n    \n    return {\n      zoom: 15,\n      center: cars[0].coordinats,\n    };\n  }, [cars]);\n\n  return (\n    <>\n      {!cars.length && <Skeleton variant=\"rect\" width={width} height={height} />}\n      {cars.length > 0 && defaultState && (\n        <YMaps>\n          <Map\n            width={width}\n            height={height}\n            defaultState={defaultState}\n            instanceRef={(ref: any) => map.current = ref}\n            onLoad={(ymaps: YMapsApi) => {\n              ymaps.ready(initMap);\n            }}\n          >\n            {cars.map((car) => <Placemark\n              key={car.id}\n              geometry={car.coordinats}\n              properties={{\n                iconCaption: car.model,\n                balloonContentHeader: car.model,\n                balloonContent: STATUS_AS_STRING[car.status],\n              }}\n              modules={['geoObject.addon.balloon']}\n              options={{\n                iconColor: car.color,\n              }}\n            />)}\n          </Map>\n        </YMaps>\n      )}\n    </>\n  );\n});\n\nexport default CarMaps;\n","import React, { useState } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core';\nimport type { DailyReport } from 'selectors/stats';\n\ninterface ReportTableProps {\n  reports: DailyReport[];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {},\n}));\n\nconst ReportTable: React.FC<ReportTableProps> = ({ reports }: ReportTableProps) => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(20);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <TableContainer>\n        <Table className={classes.root} aria-label=\"car list table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Дата</TableCell>\n              <TableCell align=\"center\">Доход</TableCell>\n              <TableCell align=\"center\">Кол-во Аренд</TableCell>\n              <TableCell align=\"center\">Происшествий</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {reports.length > 0 && reports.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((report) => (\n              <TableRow key={report.date}>\n                <TableCell component=\"th\" scope=\"row\">{report.date}</TableCell>\n                <TableCell align=\"center\">{report.income}</TableCell>\n                <TableCell align=\"center\">{report.countOfLeases}</TableCell>\n                <TableCell align=\"center\">{report.incidents}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[20, 50, 100]}\n        component=\"div\"\n        count={reports.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n      </Paper>\n  );\n};\n\nexport default ReportTable;\n","import { useSelector } from 'react-redux';\nimport { dailyReportsSelector } from 'selectors/stats';\nimport ReportTable from 'components/ReportTable';\n\nconst ReportTableContainer = () => {\n  const reports = useSelector(dailyReportsSelector);\n\n  return <ReportTable reports={reports} />\n};\n\nexport default ReportTableContainer;\n","import React from 'react';\nimport clsx from 'clsx';\nimport {\n  Grid,\n  Typography,\n  Divider,\n  Paper,\n} from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { STATUS_AS_STRING } from 'constants/car';\nimport { Helmet } from 'react-helmet';\nimport DefinitionList from 'components/common/DefinitionList';\nimport ColorCircle from 'components/common/ColorCircle';\nimport CarMaps from 'components/CarMaps';\nimport IncomeChart from 'containers/IncomeChart';\nimport Summary from 'containers/Summary';\nimport DateRange from 'containers/DateRange';\nimport ReportTable from 'containers/ReportTable';\n\nimport type { Car } from 'reducers/vehicles/cars';\n\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    paddingTop: 40,\n    paddingBottom: 40,\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    paddingBottom: 20,\n    '@media screen and (max-width: 400px)': {\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n    }\n  },\n  h1: {\n    width: '50%',\n    '@media screen and (max-width: 720px)': {\n      width: '100%',\n    },\n  },\n  dateRange: {\n    '@media screen and (max-width: 720px)': {\n      flexBasis: '20%',\n    },\n    '@media screen and (max-width: 400px)': {\n      flexBasis: '100%',\n    }\n  },\n  carImage: {\n    width: '100%',\n    height: 'auto',\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  summary: {\n    height: '100%',\n  },\n  map: {\n    marginTop: theme.spacing(2),\n  }\n}));\n\ninterface CarPageProps {\n  car?: Car;\n}\n\nconst CarPage: React.FC<CarPageProps> = ({ car }: CarPageProps) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Helmet title={car? car.model : 'Автомобиль детально'} />\n      <Grid container className={classes.root} spacing={3}>\n        <Grid item xs={12} className={classes.header}>\n          <Typography variant=\"h4\" component=\"h1\" color=\"primary\" className={classes.h1}>\n            {car ? car.model : <Skeleton variant=\"text\" width={100} />}\n          </Typography>\n          <div className={classes.dateRange}>\n            <DateRange />\n          </div>\n        </Grid>\n        <Grid item xs={12}><Divider /></Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>\n            {car? <img src={car.imageUrl} alt={car.model} className={classes.carImage} />\n              : <Skeleton variant=\"rect\" width=\"100%\" height={450} />}\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>\n            <DefinitionList\n              data={[\n                {\n                  name: 'Модель',\n                  value: car? car.model : <Skeleton variant=\"text\" />,\n                },\n                {\n                  name: 'Гос. Номер',\n                  value: car? car.stateNumber : <Skeleton variant=\"text\" />,\n                },\n                {\n                  name: 'Цвет',\n                  value: car ? <ColorCircle color={car.color} width={30} /> : <Skeleton variant=\"text\" />,\n                },\n                {\n                  name: 'Статус',\n                  value: car ? STATUS_AS_STRING[car.status] : <Skeleton variant=\"text\" />,\n                }\n              ]}\n            />\n            <div className={classes.map}>\n              <CarMaps cars={car? [car] : []} />\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={8} lg={9}>\n          <Paper className={classes.paper}>\n            <IncomeChart />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={4} lg={3}>\n          <Paper className={clsx(classes.paper, classes.summary)}>\n            <Summary />\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <ReportTable />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default CarPage;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getCarById } from 'actions/vehicles/cars';\nimport { getCarReports } from 'actions/vehicles/reports';\nimport { dateRangeSelector } from 'selectors/dashboard';\nimport CarPage from 'components/pages/Car';\n\nimport type { RootState } from 'store';\n\nconst CarPageContainer = () => {\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useDispatch();\n  const dateRange = useSelector(dateRangeSelector, shallowEqual);\n  const car = useSelector((state: RootState) => state.vehicles.cars.cars.find((car) => String(car.id) === id));\n\n  useEffect(() => {\n    if (!car) {\n      dispatch(\n        getCarById(id)\n      );\n    }\n  }, [id, dispatch, car]);\n\n  useEffect(() => {\n    if (car) {\n      dispatch(\n        getCarReports([car], dateRange.from, dateRange.to)\n      );\n    }\n  }, [car, dateRange, dispatch]);\n\n  return <CarPage car={car} />;\n};\n\nexport default CarPageContainer;\n","import {\n  Grid,\n  Typography,\n  Divider,\n} from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Helmet } from 'react-helmet';\nimport CarMaps from 'components/CarMaps';\n\nimport type { Car } from 'reducers/vehicles/cars';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    paddingTop: 40,\n    paddingBottom: 40,\n  },\n  header: {},\n}));\n\ninterface MapsPageProps {\n  cars: Car[];\n}\n\nconst MapsPage: React.FC<MapsPageProps> = ({ cars }: MapsPageProps) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Helmet title=\"Автомобили на карте\" />\n      <Grid container className={classes.root} spacing={3}>\n        <Grid item xs={12} className={classes.header}>\n          <Typography variant=\"h4\" component=\"h1\">Автомобили на карте</Typography>\n        </Grid>\n        <Grid item xs={12}><Divider /></Grid>\n        <Grid item xs={12}>\n          <CarMaps cars={cars? cars : []} height={350} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MapsPage;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCars } from 'actions/vehicles/cars';\nimport MapsPage from 'components/pages/Maps';\nimport { carsSelector } from 'selectors/cars';\n\nconst MapsPageContainer = () => {\n  const dispatch = useDispatch();\n  const cars = useSelector(carsSelector);\n\n  useEffect(() => {\n    dispatch(getCars());\n  }, [dispatch]);\n\n  return <MapsPage cars={cars} />;\n};\n\nexport default MapsPageContainer;\n","import React from 'react';\nimport {\n  Grid,\n  Typography,\n  Divider,\n  Paper,\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport type { Moment } from 'moment';\n\nexport interface IReview {\n  id: number;\n  author: string;\n  date: Moment;\n  rating: number;\n  text: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {},\n  paper: {\n    padding: theme.spacing(2),\n  },\n  header: {},\n  author: {},\n  date: {},\n  divider: {\n    marginTop: -12,\n    marginBottom: -12,\n  }\n}));\n\nconst Review: React.FC<IReview> = ({ id, author, date, rating, text } : IReview) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid container className={classes.root} spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Typography className={classes.author} variant=\"h5\" component=\"h4\">{author}</Typography>\n          <div>\n            <Rating name=\"rating\" value={rating} precision={0.5} readOnly size=\"small\" />\n          </div>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography\n            className={classes.date}\n            color=\"textSecondary\"\n            align=\"right\"\n          >\n            {date.format('DD.MM.YYYY')}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} className={classes.divider}><Divider /></Grid>\n        <Grid item xs={12}>\n          <Typography color=\"textSecondary\" dangerouslySetInnerHTML={{ __html: text}} />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default Review;\n","import React from 'react';\nimport {\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Helmet } from 'react-helmet';\nimport Review, { IReview } from 'components/Review';\n\ninterface ReviewsPageProps {\n  reviews: IReview[];\n  isFetching: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    paddingTop: 40,\n    paddingBottom: 40,\n  },\n  header: {},\n  skeletonRating: {\n    marginBottom: 10,\n  }\n}));\n\nconst ReviewsPage: React.FC<ReviewsPageProps> = ({\n  reviews,\n  isFetching,\n}: ReviewsPageProps) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Helmet title=\"Отзывы\" />\n      <Grid container className={classes.root} spacing={3}>\n        <Grid item xs={12} className={classes.header}>\n          <Typography variant=\"h4\" component=\"h1\">Отзывы</Typography>\n        </Grid>\n        {isFetching && Array.from({ length: 4 }).map((review, index) => (\n            <Grid item xs={12} md={6} key={index}>\n              <Skeleton variant=\"text\" width={150} />\n              <Skeleton variant=\"rect\" width={100} height={15} className={classes.skeletonRating}/>\n              <Skeleton variant=\"rect\" width=\"100%\" height={120} />\n            </Grid>\n          ))\n        }\n        {!isFetching && reviews.map((review) => (\n          <Grid item xs={12} md={6} key={review.id}>\n            <Review {...review} />\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  );\n}; \n\nexport default ReviewsPage;\n","import moment from 'moment';\nimport type { IReview } from 'components/Review/index';\n\nclass ReviewsService {\n  private static reviews: IReview[] = [\n    {\n      id: 1,\n      author: 'Naruto Uzumaki',\n      rating: 4.5,\n      text: `Все хорошо, но в день - один, ну два подвига, не больше. <br/>\n      Не бывает безвыходных ситуаций. Бывают ситуации, выход из которых тебя не устраивает.<br/>\n      Никогда не сдаваться Встать, когда все рухнуло — вот настоящая сила.`,\n      date: moment().add(-7, 'd'),\n    },\n    {\n      id: 2,\n      author: 'Sasuke Uchiha',\n      rating: 5,\n      text: `У тебя была мечта стать Хокаге? Если у тебя есть время бегать за мной, может, стоит больше тренироваться...<br/>\n      А, Наруто?..<br/>\n      Разве может тот, кто не спас товарища стать Хокаге?`,\n      date: moment().add(-65, 'd'),\n    },\n    {\n      id: 3,\n      author: 'Kakashi Hatake',\n      rating: 3.5,\n      text: `Ты думаешь, что ты понял это, хотя на самом деле всего лишь думаешь, что ты понял то, о чем ты думаешь.<br/>\n      Сколько бы иллюзий ты ни сочинил, они никогда не заполнят дыру в твоём сердце!<br/>\n      Не будет трусостью отказаться от поставленной задачи. Трусостью будет не делать ничего.`,\n      date: moment().add(-2, 'd'),\n    }\n  ];\n  public static getReviews(): Promise<IReview[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => resolve(ReviewsService.reviews), 2500);\n    });\n  }\n}\n\nexport default ReviewsService;\n","import React, { useEffect, useState } from 'react';\nimport ReviewsPage from 'components/pages/Reviews';\nimport ReviewsService from 'services/ReviewsService';\nimport type { IReview } from 'components/Review';\n\nconst ReviewsPageContainer = () => {\n  const [reviews, setReviews] = useState<IReview[]>([]);\n  const [isFetching, setIsFetching] = useState<boolean>(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsFetching(true);\n      const data = await ReviewsService.getReviews();\n      setIsFetching(false);\n      setReviews(data);\n    };\n\n    fetchData();\n  }, []);\n\n  return <ReviewsPage reviews={reviews} isFetching={isFetching} />;\n};\n\nexport default ReviewsPageContainer;\n","import {\n  Grid,\n  Typography,\n} from '@material-ui/core'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Helmet } from 'react-helmet';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    paddingTop: 40,\n    paddingBottom: 40,\n  },\n}));\n\nconst NotFoundPage = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Helmet title=\"Страница не найдена\" />\n      <Grid container className={classes.root} spacing={3}>\n        <Grid \n          item\n          xs={12}\n          alignContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography \n            variant=\"h2\"\n            component=\"h1\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            Page Not Found.\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default NotFoundPage;\n","import React from 'react';\nimport {\n  Grid,\n  Typography,\n} from '@material-ui/core'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Helmet } from 'react-helmet';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    paddingTop: 40,\n    paddingBottom: 40,\n  },\n}));\n\ninterface ErrorPageProps {\n  error: Error;\n}\n\nconst ErrorPage: React.FC<ErrorPageProps> = ({ error }: ErrorPageProps) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Helmet title=\"Ошибка\" />\n      <Grid container className={classes.root} spacing={3}>\n        <Grid\n          item\n          xs={12}\n          alignContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography\n            variant=\"h4\"\n            component=\"h1\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            {error.message}\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport {\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router'\nimport useErrorBoundary from 'use-error-boundary';\nimport { history } from 'store';\n\nimport Layout from './containers/Layout';\nimport DashboardPage from './containers/pages/Dashboard';\nimport CarsPage from 'containers/pages/Cars';\nimport CarPage from 'containers/pages/Car';\nimport MapsPage from 'containers/pages/Maps';\nimport ReviewsPage from 'containers/pages/Reviews';\nimport NotFoundPage from 'components/pages/NotFound';\nimport ErrorPage from 'components/pages/Error';\n\nconst App = () => {\n  const { ErrorBoundary, didCatch, error } = useErrorBoundary()\n  return (\n    <ConnectedRouter history={history}>\n      <Layout>\n        {didCatch? (\n          <ErrorPage error={error} />\n        ) : (\n          <ErrorBoundary>\n            <Switch>\n              <Route exact path=\"/\" component={DashboardPage} />\n              <Route exact path=\"/cars\" component={CarsPage} />\n              <Route exact path=\"/cars/:id\" component={CarPage} />\n              <Route exact path=\"/maps\" component={MapsPage} />\n              <Route exact path=\"/reviews\" component={ReviewsPage} />\n              <Route path=\"*\" component={NotFoundPage} />\n            </Switch>\n          </ErrorBoundary>\n        )}\n      </Layout>\n    </ConnectedRouter>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './App';\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>, \ndocument.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}